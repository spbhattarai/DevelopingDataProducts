help()
info()
demo()
librar(datasets)
library(datasets)
data("iris")
?iris
?iris
?iris
str(iris)
head(iris)
virginica<-subset(iris,Species == 'virginica')
sl<-data.frame(virginica$Sepal.Length)
sl<-data.frame(iris$Sepal.Length[iris$Species=="virginica"])
sl
summary(sl)
library(datasets)
data(mtcars)
?mtcars
abs(mean(mtcars$hp[mtcars$cyl==4])-mean(mtcars$hp[mtcars$cyl==8]))
debug(ls)
ls
source('~/Downloads/Coursera/rProgramming/rProgrammingAssignment3/ProgAssignment3-data/best.R')
best("SC", "heart attack")
getwd()
setwd(/Users/GyanGM/Downloads/Coursera/rProgramming)
getwd()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
install.packages('XML')
getwd()
setwd('F:/DataScientist/Developing-Data-Products')
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd('/Users/GyanGM/Downloads/InternetSpeedDash-master')
runApp()
install.packages(dplyr)
install.packages('dplyr')
runApp()
install.packages('lubridate')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
---
runApp()
runApp()
runApp()
runApp('~/Downloads/Coursera/Developing Data Products/Developing-Data-Products')
getwd()
setwd('/Users/GyanGM/Downloads/Coursera/Developing Data Products/Developing-Data-Products')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
titlePanel("US Population Predictor"),
width = 3
min = 2014,
runApp()
runApp()
runApp()
p("in order to see the predicted population for that year below,
,
runApp()
# Author: Gyan GM
# Author: Gyan GM
getwd()
fluidRow(includeMarkdown("Intro.Rmd")),
tabsetPanel(
tabPanel ("Historical Population",
